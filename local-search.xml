<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/09/08/hello-world/"/>
    <url>/2023/09/08/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>evaluation metric for binary classifacation</title>
    <link href="/2021/09/08/classifacation/"/>
    <url>/2021/09/08/classifacation/</url>
    
    <content type="html"><![CDATA[<h1 id="TOC"><a href="#TOC" class="headerlink" title="TOC"></a><strong>TOC</strong></h1><ol><li>简介{:toc}</li></ol><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a><strong>简介</strong></h1><p>本篇主要是梳理在二分类中用到的各类指标、便于理解</p><hr><ul><li>前言：之前在金融领域中一直在做类别不平衡的二分类问题，用的指标一直是auc、ks。因为是传统用法，也一直有点不求甚解。最近涉及到一些别的指标，所有回顾一下二分类问题常用的评价指标便于理解。</li></ul><hr><h1 id="二分类问题常用指标"><a href="#二分类问题常用指标" class="headerlink" title="二分类问题常用指标"></a><strong>二分类问题常用指标</strong></h1><p>二分类，只有两种标签，0或1。预测值也只有两种情况。根据以上，最直观的判断是混淆矩阵，如下：</p><h2 id="混淆矩阵"><a href="#混淆矩阵" class="headerlink" title="混淆矩阵"></a><strong>混淆矩阵</strong></h2><p><a href="https://baiyuyu.github.io/img/ML/confusion_matrix">https://baiyuyu.github.io/img/ML/confusion_matrix</a></p><p>很多指标的计算都和次矩阵有关，其中TRUE、FALSE表示预测正确和错误 POSITIVE、NEIGTIVE</p><p>代表正样本和负样本</p><p>so，</p><p>true positive-TP：预测为1，预测正确即实际1</p><p>false positive-FP：预测为1，预测错误即实际0</p><p>true negative-TN：预测为0，预测正确即实际0</p><p>false negative-FN：预测为0，预测错误即实际1</p><p>【注】F开头的是预测错误的，如FP，预测错误的正样本，那么实际是负样本</p><h2 id="精确率-召回率-准确率"><a href="#精确率-召回率-准确率" class="headerlink" title="精确率 召回率 准确率"></a><strong>精确率 召回率 准确率</strong></h2><p>是根据混淆矩阵衍生出来的最简单的一些指标</p><p>精确率：总体多少是预测准确的</p><p>$(TP+TN)&#x2F;all$</p><p>准确率(查准率)precison：查的准吗？预测为正，是正的概率有多少？ 预测为正正确的&#x2F;总的预测为正的 对正样本来说</p><p>$precision&#x3D; TP&#x2F;（TP+FP）$</p><p>召回率 recall:查的全吗？正的里面有多少被预测为正了</p><p>$recall&#x3D; TP&#x2F;（TP+FN）$</p><p>实际的二分类中，更关注的是少类的表现，</p><p>positive-1标签可以代表健康也可以代表生病，但一般作为positive-1的指标指的是你更关注的样本表现，</p><p>比如“是垃圾邮件”“是阳性肿瘤”“将要发生地震”。</p><p>因此在肿瘤判断和地震预测等场景：</p><p>希望的是所有的地震都可以被预测到，正样本中查的全一些，recall高</p><p>要求模型有更高的【召回率】recall，是个地震你就都得给我揪出来不能放过</p><p>在垃圾邮件判断等场景：</p><p>希望判断为垃圾的都是真的垃圾，预测为正的是正的概率更高</p><p>要求模型有更高的【精确率】precision，你给我放进回收站里的可都得确定是垃圾，千万不能有正常邮件啊</p><p>理解：</p><p>我们可以把precision也理解为，当你的模型作出一个新的预测时，它的confidence score 是多少，或者它做的这个预测是对的的可能性是多少。</p><p>一般来说呢，鱼与熊掌不可兼得。如果你的模型很贪婪，想要覆盖更多的sample，那么它就更有可能犯错。在这种情况下，你会有很高的recall，</p><p>但是较低的precision。如果你的模型很保守，只对它很sure的sample作出预测，那么你的precision会很高，但是recall会相对低。</p><p>这样一来呢，我们可以选择只看我们感兴趣的class，就是minority class的precision，recall来评价模型的好坏。</p><p>画圈大一点的话，正样本更可能都被圈进来，但负样本也会圈进来，准确率变低，召回变大。</p><h2 id="f-SCORE"><a href="#f-SCORE" class="headerlink" title="f_SCORE"></a><strong>f_SCORE</strong></h2><p>F1函数是一个常用指标，F1值是精确率和召回率的调和均值，即</p><p>$2<em>precision</em>recall &#x2F; (precision + recall)$</p><h2 id="AUC"><a href="#AUC" class="headerlink" title="AUC"></a><strong>AUC</strong></h2><p>roc曲线下方的面积</p><p>roc曲线横纵轴：真正率和假正率</p><p>真正率即recall：所有真的正样本中的预测为正的样本 TP&#x2F;(TP+FN)</p><p>假正率：所有负样本中预测为正的概率 FP&#x2F;(TN+FP)</p><p>好的分类器，当假正率一定的情况下，真正率越高越好，即左上角更好</p><p>当x&#x3D;y是，正样本中预测为正的概率和负样本中预测为正的概率相等，即随机，</p><p>我们希望正样本中预测为正的概率更高，所有auc越高越好</p><p>AUC的优势：AUC的计算方法同时考虑了分类器对于正例和负例的分类能力，在样本不平衡的情况下，依然能够对分类器作出合理的评价</p><p>AUC的其他解释：取不同分类阈值情况下的俩值，如果阈值为0，即没有预测为正的样本，都是0</p><p>如果阈值为1，则预测值都是正样本，都是1（画法）</p><p>解释2：根据预测值排序后，正样本的预测值大于负样本的预测值的概率。</p><h2 id="KS值"><a href="#KS值" class="headerlink" title="KS值"></a><strong>KS值</strong></h2><p>横轴变为阈值，</p><p>纵轴画真正率和假正率两条曲线，两条线之间差值。越大越好。</p><p>代表某个阈值的情况下，正样本预测为正的概率比负样本预测为正的概率大多数，越大越好。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h1><p>优点：简单有效，异常值不敏感，精度高</p><p>缺点：开销大，计算复杂，存储空间大</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
